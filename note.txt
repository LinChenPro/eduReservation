purchase : res_ error
add 
	hours_paid
	hours_not_paid
	hours_consume

* teacher schedule: 

get_teacher_schedule(tid, week_nb){
	return cherche result of table teacher_schedule;
	ts_slot_n par default '00000000000....'
}

atomic_set_teacher_schedule(tid, week_nb, from_day, from_h, to_day, to_h, value){
	return cherche result of table teacher_schedule;
	ts_slot_n par default '00000000000....'
}

get_teacher_reservations(tid, week_nb){
	array of reservations (day<>null, from<>null, to<>null, statut<>cancelled);
}

get_teacher_operations(tid, week_nb){
	array of reservations (day, from<>null, to<>null, statut=1);
}













->
tid,[week_nb]
					->
					uid, week_nb
					<-
					stamp

					->
					uid, week_nb
					<-
					["000...", "001...", "001...", "001...", "001...", "001...", "001..."]

					->
					uid, week_nb
					<-
					all reservations this week (tid, sid, tname, sname, day_nb, h1, h2,categ_id, categ_name, statut, my_role)

					->
					uid, week_nb
					<-
					all my operations this week (tid, sid, tname, sname, day_nb, h1, h2,categ_id, categ_name, statut, my_role)

<-


stamp
crt_day_nb
crt_week_nb
demande_week_nb
days = [
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
	{nb, date_str, week_str, hours=[0,1,0,1,1,0...]}
]
reservations = 
[

]	
options = 
[

]	

teacher schedule : where selected_tid in(tid, sid) : all res et ope in which i'm teacher or student
student schedule : where tid in(selected_sid, selected_tid) or sid in(selected_sid, selected_tid) all res et ope in which me or the teacher is teacher or student 

The only resource critic is the calendar week of every one.
So the atomic opreation begin with the update of this table.
